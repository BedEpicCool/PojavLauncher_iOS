name: Development build

on:
  pull_request:
    branches-ignore:
      - 'l10n_main'
    types: [opened, reopened]
  push:
    branches-ignore:
      - 'l10n_main'
  workflow_dispatch:

jobs:
  build:
    name: Development build
    strategy:
      matrix:
        platform:
          - 2
          - 7
          - 8
        platform_name:
          - ios
          - iossimulator
          - tvossimulator
        os:
          - macos
          - windows
    runs-on: ${{ matrix.os == 'macos' && 'MacStadium' || 'self-hosted' }}

    steps:
      - name: Remove work folders (macOS)
        if: runner.os == 'macOS'
        env:
          password: ${{ secrets.ELLIE_MINI_SECRET }}
        run: |
          echo "before"
          ls -lah ./
          echo $password | sudo -S rm -rf ./* || true
          echo $password | sudo -S rm -rf ./.??* || true
          echo "after"
          ls -lah ./

      - name: Remove work folders (Windows PowerShell)
        if: runner.os == 'Windows'
        env:
          password: ${{ secrets.ELLIE_MINI_SECRET }}
        shell: pwsh
        run: |
          Write-Host "before"
          Get-ChildItem -Force | ForEach-Object {
            try {
              Remove-Item -LiteralPath $_.FullName -Recurse -Force -ErrorAction Stop
            } catch {
              Write-Warning "Failed to remove $($_.FullName): $_"
              exit 1
            }
          }
          Write-Host "after"
          Get-ChildItem -Force

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout repository submodules
        run: git submodule update --init --recursive
        shell: bash

      - name: Get gl4es latest commit hash
        id: gl4es-sha
        if: runner.os == 'macOS'
        run: echo "::set-output name=sha::$(git ls-remote https://github.com/PojavLauncherTeam/gl4es-114-extra refs/heads/master | grep -io '^\S*')"
        shell: bash

      - name: Get JRE8
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          path: depends
          workflow_conclusion: success
          allow_forks: false
          repo: PojavLauncherTeam/android-openjdk-build-multiarch
          branch: buildjre8
          name: jre8-ios-aarch64

      - name: Get JRE17
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          path: depends
          workflow_conclusion: completed
          allow_forks: false
          repo: PojavLauncherTeam/android-openjdk-build-multiarch
          branch: buildjre17-21
          name: jre17-ios-aarch64

      - name: Get JRE21
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          path: depends
          workflow_conclusion: completed
          allow_forks: false
          repo: PojavLauncherTeam/android-openjdk-build-multiarch
          branch: buildjre17-21
          name: jre21-ios-aarch64

      - name: Build for ${{ matrix.platform_name }} (macOS)
        if: runner.os == 'macOS'
        env:
          password: ${{ secrets.ELLIE_MINI_SECRET }}
        run: |
          export PATH=/opt/procursus/bin:/opt/homebrew/bin:$PATH
          export RUNNER=1 SLIMMED=1
          if [ "${{ matrix.platform_name }}" == "ios" ]; then
            gmake -j$(sysctl -n hw.ncpu) dsym package PLATFORM=${{ matrix.platform }}
            gmake -j$(sysctl -n hw.ncpu) dsym package PLATFORM=${{ matrix.platform }} TROLLSTORE_JIT_ENT=1
          elif [ "${{ matrix.platform_name }}" == "tvos" ]; then
            gmake -j$(sysctl -n hw.ncpu) dsym package PLATFORM=${{ matrix.platform }} TROLLSTORE_JIT_ENT=1
          else
            gmake -j$(sysctl -n hw.ncpu) dsym package PLATFORM=${{ matrix.platform }}
          fi

      - name: Build for ${{ matrix.platform_name }} (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        env:
          password: ${{ secrets.ELLIE_MINI_SECRET }}
        run: |
          Write-Host "Building for platform $($Env:platform_name) on Windows runner"
          # TODO: Add your Windows build commands here

      - name: Upload regular ipa (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: net.kdt.pojavlauncher-${{ matrix.platform_name }}.ipa
          path: artifacts/net.kdt.pojavlauncher-*-${{ matrix.platform_name }}.ipa

      - name: Upload regular tipa (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: net.kdt.pojavlauncher-${{ matrix.platform_name }}-trollstore.tipa
          path: artifacts/net.kdt.pojavlauncher-*-${{ matrix.platform_name }}-trollstore.tipa

      - name: Upload slimmed ipa (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: net.kdt.pojavlauncher.slimmed-${{ matrix.platform_name }}.ipa
          path: artifacts/net.kdt.pojavlauncher.slimmed-*-${{ matrix.platform_name }}.ipa

      - name: Upload slimmed tipa (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: net.kdt.pojavlauncher.slimmed-${{ matrix.platform_name }}-trollstore.tipa
          path: artifacts/net.kdt.pojavlauncher.slimmed-*-${{ matrix.platform_name }}-trollstore.tipa

      - name: Upload PojavLauncher.dSYM (macOS only)
        if: runner.os == 'macOS' && matrix.platform_name == 'ios'
        uses: actions/upload-artifact@v4
        with:
          name: PojavLauncher.dSYM
          path: artifacts/PojavLauncher.dSYM
